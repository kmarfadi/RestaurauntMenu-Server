{
  "openapi": "3.0.0",
  "info": {
    "title": "Marf Pizza Restaurant API",
    "description": "A comprehensive restaurant menu API with customer-facing endpoints and admin management functionality. Features menu display, cart checkout via WhatsApp, and full CRUD operations for menu items and categories.",
    "version": "1.0.0",
    "contact": {
      "name": "Marf Pizza API Support",
      "email": "khalifahmarfadi@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3008",
      "description": "Development server"
    },
    {
      "url": "https://api.marfpizza.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Menu",
      "description": "Customer-facing menu endpoints"
    },
    {
      "name": "Authentication",
      "description": "Admin authentication endpoints"
    },
    {
      "name": "Admin - Categories",
      "description": "Admin category management endpoints"
    },
    {
      "name": "Admin - Items",
      "description": "Admin menu item management endpoints"
    },
    {
      "name": "Admin - Upload",
      "description": "Admin image upload endpoints"
    },
    {
      "name": "Checkout",
      "description": "Order checkout and WhatsApp integration"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Health Check",
        "description": "Check if the API is running",
        "tags": ["Menu"],
        "responses": {
          "200": {
            "description": "API is running",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "API is running"
                }
              }
            }
          }
        }
      }
    },
    "/api/menu": {
      "get": {
        "summary": "Get Menu",
        "description": "Retrieve all menu categories and items for customer display",
        "tags": ["Menu"],
        "responses": {
          "200": {
            "description": "Menu data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/branches": {
      "get": {
        "summary": "Get Branches",
        "description": "Retrieve all restaurant branches for checkout",
        "tags": ["Checkout"],
        "responses": {
          "200": {
            "description": "Branches retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchListResponse"
                }
              }
            }
          },
          "404": {
            "description": "No branches found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/checkout": {
      "post": {
        "summary": "Submit Order",
        "description": "Submit order and generate WhatsApp URL for delivery",
        "tags": ["Checkout"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/login": {
      "post": {
        "summary": "Admin Login",
        "description": "Authenticate admin user and receive JWT token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/categories": {
      "get": {
        "summary": "Get All Categories",
        "description": "Retrieve all menu categories (Admin only)",
        "tags": ["Admin - Categories"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Category",
        "description": "Create a new menu category (Admin only)",
        "tags": ["Admin - Categories"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/category/{id}": {
      "delete": {
        "summary": "Delete Category",
        "description": "Delete a menu category by ID (Admin only)",
        "tags": ["Admin - Categories"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Category ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Category deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/items": {
      "get": {
        "summary": "Get All Items",
        "description": "Retrieve all menu items (Admin only)",
        "tags": ["Admin - Items"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Item",
        "description": "Create a new menu item (Admin only)",
        "tags": ["Admin - Items"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/item/{id}": {
      "put": {
        "summary": "Update Item",
        "description": "Update an existing menu item (Admin only)",
        "tags": ["Admin - Items"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Item ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Item",
        "description": "Delete a menu item by ID (Admin only)",
        "tags": ["Admin - Items"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Item ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/upload": {
      "post": {
        "summary": "Upload Image",
        "description": "Upload an image to Cloudinary (Admin only)",
        "tags": ["Admin - Upload"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file to upload"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "500": {
            "description": "Upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadError"
                }
              }
            }
          }
        }
      }
    },
    "/api/upload": {
      "post": {
        "summary": "Upload Image (Legacy)",
        "description": "Legacy upload endpoint - use /api/admin/upload instead",
        "tags": ["Admin - Upload"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file to upload"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "500": {
            "description": "Upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /api/admin/login"
      }
    },
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the category"
          },
          "name": {
            "type": "string",
            "description": "Name of the category",
            "example": "Classic Pizzas"
          },
          "cover_image": {
            "type": "string",
            "format": "uri",
            "description": "URL of the category cover image",
            "example": "https://images.pexels.com/photos/2619967/pexels-photo-2619967.jpeg"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the category was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the category was last updated"
          }
        },
        "required": ["id", "name"]
      },
      "CreateCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category",
            "example": "Gourmet Pizzas"
          },
          "cover_image": {
            "type": "string",
            "format": "uri",
            "description": "URL of the category cover image",
            "example": "https://images.pexels.com/photos/1653877/pexels-photo-1653877.jpeg"
          }
        },
        "required": ["name"]
      },
      "CategoryListResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the item"
          },
          "name": {
            "type": "string",
            "description": "Name of the menu item",
            "example": "Margherita Pizza"
          },
          "description": {
            "type": "string",
            "description": "Description of the menu item",
            "example": "Classic Italian pizza with fresh mozzarella, tomato sauce, and basil"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price of the item",
            "example": 16.99
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "URL of the item image",
            "example": "https://images.pexels.com/photos/2619967/pexels-photo-2619967.jpeg"
          },
          "category_id": {
            "type": "integer",
            "description": "ID of the category this item belongs to",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the item was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the item was last updated"
          }
        },
        "required": ["id", "name", "price", "category_id"]
      },
      "CreateItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the menu item",
            "example": "Pepperoni Pizza"
          },
          "description": {
            "type": "string",
            "description": "Description of the menu item",
            "example": "Delicious pizza topped with pepperoni and mozzarella cheese"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price of the item",
            "example": 18.99
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "URL of the item image",
            "example": "https://images.pexels.com/photos/2619967/pexels-photo-2619967.jpeg"
          },
          "category_id": {
            "type": "integer",
            "description": "ID of the category this item belongs to",
            "example": 1
          }
        },
        "required": ["name", "price", "category_id"]
      },
      "UpdateItemRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Updated description of the menu item",
            "example": "Updated description with more details"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Updated price of the item",
            "example": 19.99
          }
        },
        "minProperties": 1
      },
      "ItemListResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Item"
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Admin username",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Admin password",
            "example": "password123"
          }
        },
        "required": ["username", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": ["token"]
      },
      "CheckoutRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer's full name",
            "example": "محمد أحمد"
          },
          "address": {
            "type": "string",
            "description": "Delivery address",
            "example": "شارع هايل، صنعاء"
          },
          "cart": {
            "type": "array",
            "description": "Array of cart items",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Item name",
                  "example": "Margherita Pizza"
                },
                "qty": {
                  "type": "integer",
                  "description": "Quantity of the item",
                  "example": 2
                }
              },
              "required": ["name", "qty"]
            }
          },
          "branch_id": {
            "type": "integer",
            "description": "Selected branch ID",
            "example": 1,
            "enum": [1, 2]
          }
        },
        "required": ["name", "address", "cart", "branch_id"]
      },
      "CheckoutResponse": {
        "type": "object",
        "properties": {
          "whatsappUrl": {
            "type": "string",
            "format": "uri",
            "description": "WhatsApp URL with order details",
            "example": "https://wa.me/967777858820?text=طلب%20من%20محمد%20أحمد..."
          }
        },
        "required": ["whatsappUrl"]
      },
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Branch ID"
          },
          "name": {
            "type": "string",
            "description": "Branch name",
            "example": "فرع شارع هايل"
          },
          "address": {
            "type": "string",
            "description": "Branch address",
            "example": "شارع هايل، صنعاء"
          },
          "phone": {
            "type": "string",
            "description": "Branch phone number",
            "example": "+967777858820"
          }
        },
        "required": ["id", "name", "address", "phone"]
      },
      "BranchListResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Branch"
        }
      },
      "MenuResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "description": "Array of menu categories",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "items": {
            "type": "array",
            "description": "Array of menu items",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        },
        "required": ["categories", "items"]
      },
      "UploadResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Cloudinary URL of the uploaded image",
            "example": "https://res.cloudinary.com/demo/image/upload/v1234567890/uploads/example.jpg"
          },
          "public_id": {
            "type": "string",
            "description": "Cloudinary public ID of the uploaded image",
            "example": "uploads/example"
          }
        },
        "required": ["url", "public_id"]
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid username or password"
          }
        }
      },
      "ForbiddenError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "No token provided"
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Bad Request"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message",
            "example": "Category name is required"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 400
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Not Found"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message",
            "example": "Category not found"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 404
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Internal Server Error"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message",
            "example": "Something went wrong"
          },
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 500
          }
        }
      },
      "UploadError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "ERROR UPLOADING IMAGE TO CLOUDINARY"
          }
        }
      }
    }
  }
}


